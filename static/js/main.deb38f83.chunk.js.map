{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","setSelectedTodo","selectedTodo","isTodoSelected","todo","className","map","classNames","id","completed","title","type","onClick","TodoFilter","query","onQueryChange","filterBy","onFilterByChange","getTextForOption","option","correctedOption","split","toUpperCase","join","value","onChange","event","target","Object","values","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","userId","userFromServer","catch","error","message","finally","undefined","href","email","name","App","setTodos","All","setFilterBy","setQuery","serverTodos","Error","filteredTodos","useMemo","filter","Active","Completed","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.deb38f83.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | undefined;\n  setSelectedTodo: (arg0: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const isTodoSelected = (todo: Todo) => {\n    return todo === selectedTodo;\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <>\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': todo === selectedTodo,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': todo.completed,\n                    'has-text-danger': !todo.completed,\n                  })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('far', {\n                        'fa-eye-slash': isTodoSelected(todo),\n                        'fa-eye': !isTodoSelected(todo),\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          </>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string;\n  onQueryChange: (query: string) => void;\n  filterBy: Filter;\n  onFilterByChange: (filter: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  filterBy,\n  onFilterByChange,\n}) => {\n  const getTextForOption = (option: string) => {\n    const correctedOption = option.split('');\n\n    correctedOption[0] = correctedOption[0].toUpperCase();\n\n    return correctedOption.join('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(event) => onFilterByChange(event.target.value as Filter)}\n          >\n            {Object.values(Filter).map((value) => (\n              <option key={value} value={value}>\n                {getTextForOption(value)}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length !== 0\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onQueryChange('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (arg0: Todo | undefined) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setErrorMessage('');\n    setIsLoading(true);\n\n    if (todo) {\n      getUser(todo?.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n        })\n        .catch(error => {\n          setErrorMessage(error.message);\n        })\n        .finally(() => setIsLoading(false));\n    } else {\n      setErrorMessage('No selected todo');\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && !user\n        && <Loader />}\n      {!isLoading && !errorMessage\n        && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectedTodo(undefined)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={`has-text-${todo.completed\n                    ? 'success'\n                    : 'danger'}`}\n                >\n                  {todo.completed\n                    ? 'Done'\n                    : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                {!isLoading && user\n                && (\n                  <a href={`mailto: ${user.email}`}>\n                    {user.name}\n                  </a>\n                )}\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | undefined>(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterBy, setFilterBy] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(serverTodos => {\n        setTodos(serverTodos);\n      })\n      .catch(error => {\n        throw new Error(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = useMemo(() => (\n    todos\n      .filter(todo => {\n        switch (filterBy) {\n          case Filter.Active:\n            return !todo.completed;\n          case Filter.Completed:\n            return todo.completed;\n          case Filter.All:\n          default:\n            return true;\n        }\n      })\n      .filter(todo => {\n        return todo.title.toLowerCase().includes(query.toLowerCase());\n      })\n  ), [query, filterBy, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                filterBy={filterBy}\n                onFilterByChange={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}