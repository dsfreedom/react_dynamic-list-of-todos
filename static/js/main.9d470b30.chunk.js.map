{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setFilteredTodos","useState","filterBy","setFilterBy","query","setQuery","useEffect","filteredTodos","sortBy","fiteredTodos","filter","toLowerCase","includes","filterTodos","onChange","event","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","isLoading","setIsLoading","errorMessage","setErrorMessage","userId","userFromServer","catch","error","message","finally","undefined","href","email","name","App","setTodos","serverTodos","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d470b30.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | undefined;\n  setSelectedTodo: (arg0: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <>\n            <tr\n              data-cy=\"todo\"\n              className={todo === selectedTodo\n                ? 'has-background-info-light'\n                : ''}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far ${todo === selectedTodo\n                      ? 'fa-eye-slash'\n                      : 'fa-eye'}`}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          </>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n};\n\nconst COMPLETED_FILTER = 'completed';\nconst ACTIVE_FILTER = 'active';\n\nconst filterTodos = (todos: Todo[], sortBy: string, query: string) => {\n  let fiteredTodos = [...todos];\n\n  switch (sortBy) {\n    case ACTIVE_FILTER:\n      fiteredTodos = todos.filter(todo => !todo.completed);\n      break;\n\n    case COMPLETED_FILTER:\n      fiteredTodos = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (query) {\n    fiteredTodos = fiteredTodos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  return fiteredTodos;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  setFilteredTodos,\n}) => {\n  const [filterBy, setFilterBy] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const filteredTodos = filterTodos(todos, filterBy, query);\n\n    setFilteredTodos(filteredTodos);\n  }, [filterBy, query, todos, setFilteredTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilterBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n\n            <option value=\"active\">Active</option>\n\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length !== 0\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (arg0: Todo | undefined) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setErrorMessage('');\n    setIsLoading(true);\n\n    if (todo) {\n      getUser(todo?.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          setErrorMessage(error.message);\n        })\n        .finally(() => setIsLoading(false));\n    } else {\n      setErrorMessage('No selected todo');\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && !user\n        && <Loader />}\n      {!isLoading && !errorMessage\n        && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectedTodo(undefined)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={`has-text-${todo.completed\n                    ? 'success'\n                    : 'danger'}`}\n                >\n                  {todo.completed\n                    ? 'Done'\n                    : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                {!isLoading && user\n                && (\n                  <a href={`mailto: ${user.email}`}>\n                    {user.name}\n                  </a>\n                )}\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | undefined>(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos()\n      .then(serverTodos => {\n        setTodos(serverTodos);\n        setFilteredTodos(serverTodos);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilteredTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}